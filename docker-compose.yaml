---
version: "3"
services:
  workspace:
    build:
      dockerfile: "Dockerfile.workspace"
    user: "node"
    command: "tail -f /dev/null"
    volumes:
      - ".:/workspace"
  ingress:
    image: "traefik:v2.5"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      # - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "8080:8080"
      - "80:80"
  client:
    build:
      dockerfile: "Dockerfile.workspace"
    deploy:
      restart_policy:
        condition: on-failure
    entrypoint: "bash"
    command:
      - "-c"
      - "npm install && npm run start"
    working_dir: /main
    volumes:
      - "./client:/main"
      - "client_nodemodules:/main/node_modules"
    expose:
      - 3000
    labels:
      traefik.enable: true
      # traefik.http.routers.client.service: client@docker
      traefik.http.routers.client.entrypoints: web
      # traefik.http.routers.client.rule: PathPrefix(`/static`)
      traefik.http.routers.client.rule: Host(`mern.localhost`) && PathPrefix(`/`)
      # traefik.http.routers.client.rule: PathPrefix(`/static`)
      traefik.http.middlewares.client.stripprefix.prefixes: /static
      traefik.http.middlewares.client.stripprefix.forceSlash: false
  server:
    build:
      dockerfile: "Dockerfile.workspace"
    deploy:
      restart_policy:
        condition: on-failure
    entrypoint: "bash"
    command:
      - "-c"
      - "npm install && npm run start"
    working_dir: /main
    volumes:
      - "./server:/main"
      - "server_nodemodules:/main/node_modules"
    expose:
      - 8083
    labels:
      traefik.enable: true
      # traefik.http.routers.server.service: server@docker
      traefik.http.routers.server.entrypoints: web
      # traefik.http.routers.server.rule: PathPrefix(`/rest`)
      traefik.http.routers.server.rule: Host(`mern.localhost`) && PathPrefix(`/rest`)
      traefik.http.middlewares.server.stripprefix.prefixes: /rest
      traefik.http.middlewares.server.stripprefix.forceSlash: false
  mongo:
    image: mongo:5.0.3  
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    expose:
      - 27017
  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    expose:
      - 8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

volumes:
  client_nodemodules:
  server_nodemodules: